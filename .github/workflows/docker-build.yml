name: Docker Build and Push

on:
  workflow_call:
    inputs:
      dockerfile:
        description: 'The Dockerfile path'
        type: string
        default: 'Dockerfile'
      name: 
        description: 'Image name'
        type: string
        default: "${{github.repository}}"
      dir:
        description: 'Directory where to run docker build'
        type: string
        default: '.'
      overlay:
        description: 'Artifact name to unpack over the checked out source'
        type: string
      prepare:
        description: 'Shell commands to run before building'
        type: string
      args:
        description: 'Docker build args'
        type: string
      production_branch:
        description: 'Name of the production branch'
        type: string
        default: 'main'
    secrets:
      personal_token:
        description: 'Optional personal token used to checkout private repositories (current and submodules)'

jobs:
  release:
#    environment: ${{ (github.ref_name == inputs.production_branch) && 'production' || 'staging' }}
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 20
          submodules: recursive
          token: ${{ secrets.personal_token || github.token }}
          
      - name: Apply overlay from an artifact
        if: ${{ inputs.overlay }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.overlay }}

      - name: Delete the overlay artifact
        if: ${{ inputs.overlay }}
        uses: geekyeggo/delete-artifact@v5
        with:
          name: ${{ inputs.overlay }}

      - name: Run shell script to prepare the build 
        if: ${{ inputs.prepare }}
        shell: bash
        run: ${{ inputs.prepare }}


      - name: Generate image tag based on branch etc
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{inputs.name || github.repository}}
          tags: |
            type=ref,event=branch,enable=${{ startsWith(github.ref_name, 'feature/') }}
            type=raw,value=feature,enable=${{ startsWith(github.ref_name, 'feature/') }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern=release
            type=raw,value=latest,enable=${{ github.ref_name == inputs.production_branch }}
            type=raw,value=staging,enable=${{ github.ref_name == github.event.repository.default_branch && github.event.repository.default_branch != inputs.production_branch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          # determine path from dockerfile location
          context: ${{inputs.dir}}
          push: true
          file: ${{inputs.dockerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ inputs.args }}

