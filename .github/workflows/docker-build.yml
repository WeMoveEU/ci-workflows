name: Docker Build and Push

on:
  workflow_call:
    inputs:
      images:
        description: "List of image configurations containing dockerfile and name, and file overlay"
        type: string
        default: '[{"dockerfile": "Dockerfile", "name": "${{github.repository}}"}]'
      production_branch:
        description: "Name of the production branch"
        type: string
        default: "main"
    secrets:
      personal_token:
        description: "Optional personal token used to checkout private repositories (current and submodules)"

jobs:
  release:
    #    environment: ${{ (github.ref_name == inputs.production_branch) && 'production' || 'staging' }}
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(inputs.images) }}

    steps:
      - uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 20
          submodules: recursive
          token: ${{ secrets.personal_token || github.token }}

      - name: Apply overlay from an artifact
        if: ${{ matrix.image.overlay }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.image.overlay }}

      - name: Delete the overlay artifact
        if: ${{ matrix.image.overlay }}
        uses: geekyeggo/delete-artifact@v5
        with:
          name: ${{ matrix.image.overlay }}

      - name: Run shell script to prepare the build
        if: ${{ matrix.image.prepare }}
        shell: bash
        run: ${{ matrix.image.prepare }}

      - name: Generate image tag based on branch etc
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{matrix.image.name || github.repository}}
          tags: |
            type=ref,event=branch,enable=${{ startsWith(github.ref_name, 'feature/') }}
            type=raw,value=feature,enable=${{ startsWith(github.ref_name, 'feature/') }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern=release
            type=raw,value=latest,enable=${{ github.ref_name == inputs.production_branch }}
            type=raw,value=staging,enable=${{ github.ref_name == github.event.repository.default_branch && github.event.repository.default_branch != inputs.production_branch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          # determine path from dockerfile location
          context: ${{matrix.image.dir || '.'}}
          push: true
          file: ${{matrix.image.dockerfile || 'Dockerfile'}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
